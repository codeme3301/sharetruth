app sharetruth {
  wasp: {
    version: "^0.11.1"
  },
  title: "sharetruth",
  client: {
    rootComponent: import { Layout } from "@client/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@client/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@client/pages/auth/Signup.jsx"
}

entity User {=psl
        id Int @id @default(autoincrement())
        username String @unique
        password String
        profilePic String
        posts Post[]
        following User[] @relation("UserFollows", fields: [followingId], references: [id])
        followers User[] @relation("UserFollowed", fields: [followerId], references: [id])
        followingId Int
        followerId Int
psl=}

entity Post {=psl
        id Int @id @default(autoincrement())
        pic String
        caption String
        user User @relation(fields: [userId], references: [id])
        userId Int
psl=}

action createPost {
  fn: import { createPost } from "@server/actions.js",
  entities: [Post]
}

action followUser {
  fn: import { followUser } from "@server/actions.js",
  entities: [User]
}

query getPosts {
  fn: import { getPosts } from "@server/queries.js",
  entities: [Post, User]
}

query getRandomPosts {
  fn: import { getRandomPosts } from "@server/queries.js",
  entities: [Post]
}

query getUser {
  fn: import { getUser } from "@server/queries.js",
  entities: [User]
}

route HomePageRoute { path: "/", to: HomePage }
page HomePage {
  component: import { HomePage } from "@client/pages/Home.jsx",
  authRequired: true
}

route ExploreRoute { path: "/explore", to: ExplorePage }
page ExplorePage {
  component: import { Explore } from "@client/Explore.jsx",
  authRequired: true
}

route ProfileRoute { path: "/profile/:username", to: ProfilePage }
page ProfilePage {
  component: import { Profile } from "@client/Profile.jsx",
  authRequired: true
}
